# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: sgotify.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import sgotify_pb2


class SgotifyBase(abc.ABC):

    @abc.abstractmethod
    async def SendSpotifyAuth(self, stream: 'grpclib.server.Stream[sgotify_pb2.SpotifyAuth, sgotify_pb2.SpotifyAuthReply]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/Sgotify/SendSpotifyAuth': grpclib.const.Handler(
                self.SendSpotifyAuth,
                grpclib.const.Cardinality.UNARY_UNARY,
                sgotify_pb2.SpotifyAuth,
                sgotify_pb2.SpotifyAuthReply,
            ),
        }


class SgotifyStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.SendSpotifyAuth = grpclib.client.UnaryUnaryMethod(
            channel,
            '/Sgotify/SendSpotifyAuth',
            sgotify_pb2.SpotifyAuth,
            sgotify_pb2.SpotifyAuthReply,
        )
